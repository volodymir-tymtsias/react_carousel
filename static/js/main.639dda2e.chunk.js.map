{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handlerPreviousButton","endPosition","shift","infinite","Math","min","setState","handlerNextButton","max","this","props","images","step","frameSize","itemWidth","animationDuration","width","length","className","style","transition","marginLeft","map","image","nameImage","match","src","alt","height","indexOf","type","onClick","disabled","React","Component","App","defaultValue","onChange","event","currentTarget","value","name","defaultChecked","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.639dda2e.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  handlerPreviousButton = (\n    endPosition:number,\n    shift:number,\n    infinite: boolean,\n  ) => {\n    let { position } = this.state;\n\n    if (position === 0 && infinite) {\n      position = endPosition;\n    } else {\n      position += shift;\n      position = Math.min(position, 0);\n    }\n\n    this.setState({ position });\n  };\n\n  handlerNextButton = (\n    endPosition:number,\n    shift:number,\n    infinite: boolean,\n  ) => {\n    let { position } = this.state;\n\n    if (position === endPosition && infinite) {\n      position = 0;\n    } else {\n      position -= shift;\n      position = Math.max(position, endPosition);\n    }\n\n    this.setState({ position });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n    const { position } = this.state;\n    const width = itemWidth * frameSize + 10 * (frameSize - 1);\n    const endPosition = (-itemWidth - 10) * (images.length - frameSize);\n    const shift = (itemWidth + 10) * step;\n\n    return (\n      <div className=\"Carousel\" style={{ width: `${width}px` }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `margin-left ${animationDuration}ms`,\n            marginLeft: `${position}px`,\n          }}\n        >\n          {images.map((image) => {\n            const nameImage = image.match(/[^\\\\/]+(?=\\.\\w+$)/) || '';\n\n            return (\n              <li key={images.indexOf(image)}>\n                <img\n                  src={image}\n                  alt={nameImage[0]}\n                  width={itemWidth}\n                  height={itemWidth}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.handlerPreviousButton(endPosition, shift, infinite);\n            }}\n            disabled={position === 0 && !infinite}\n          >\n            ⇦\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => {\n              this.handlerNextButton(endPosition, shift, infinite);\n            }}\n            disabled={position === endPosition && !infinite}\n          >\n            ⇨\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n    const width = itemWidth * frameSize + 10 * (frameSize - 1);\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"Options\" style={{ width: `${width}px` }}>\n          <h2 className=\"Options__title\">Options</h2>\n\n          <label>\n            {'Images width: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"50\"\n              max=\"500\"\n              defaultValue={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Number of images displayed: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Number of images scrolled per click: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={step}\n              onChange={(event) => {\n                this.setState({ step: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Time in ms to show the new images: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"100\"\n              max=\"10000\"\n              defaultValue={animationDuration}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Carousel cyclic: '}\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              defaultChecked={infinite}\n              onChange={(event) => {\n                this.setState({ infinite: event.currentTarget.checked });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}