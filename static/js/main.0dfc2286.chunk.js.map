{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","width","endPosition","length","shift","className","style","transition","marginLeft","map","image","nameImage","match","src","alt","height","indexOf","type","onClick","Math","min","setState","disabled","max","React","Component","App","defaultValue","onChange","event","currentTarget","value","name","defaultChecked","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dfc2286.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n    let { position } = this.state;\n    const width = itemWidth * frameSize + 10 * (frameSize - 1);\n    const endPosition = (-itemWidth - 10) * (images.length - frameSize);\n    const shift = (itemWidth + 10) * step;\n\n    return (\n      <div className=\"Carousel\" style={{ width: `${width}px` }}>\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `margin-left ${animationDuration}ms`,\n            marginLeft: `${position}px`,\n          }}\n        >\n          {images.map((image) => {\n            const nameImage = image.match(/[^\\\\/]+(?=\\.\\w+$)/) || '';\n\n            return (\n              <li key={images.indexOf(image)}>\n                <img\n                  src={image}\n                  alt={nameImage[0]}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              if (position === 0 && infinite) {\n                position = endPosition;\n              } else {\n                position += shift;\n                position = Math.min(position, 0);\n              }\n\n              this.setState({ position });\n            }}\n            disabled={position === 0 && !infinite}\n          >\n            ⇦\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => {\n              if (position === endPosition && infinite) {\n                position = 0;\n              } else {\n                position -= shift;\n                position = Math.max(position, endPosition);\n              }\n\n              this.setState({ position });\n            }}\n            disabled={position === endPosition && !infinite}\n          >\n            ⇨\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n    const width = itemWidth * frameSize + 10 * (frameSize - 1);\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"Options\" style={{ width: `${width}px` }}>\n          <h2 className=\"Options__title\">Options</h2>\n\n          <label>\n            {'Images width: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"50\"\n              max=\"500\"\n              defaultValue={itemWidth}\n              onChange={(event) => {\n                this.setState({ itemWidth: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Number of images displayed: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={frameSize}\n              onChange={(event) => {\n                this.setState({ frameSize: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Number of images scrolled per click: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              defaultValue={step}\n              onChange={(event) => {\n                this.setState({ step: +event.currentTarget.value });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Time in ms to show the new images: '}\n            <input\n              className=\"Options__field\"\n              type=\"number\"\n              min=\"100\"\n              max=\"10000\"\n              defaultValue={animationDuration}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.currentTarget.value,\n                });\n              }}\n            />\n          </label>\n\n          <label>\n            {'Carousel cyclic: '}\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              defaultChecked={infinite}\n              onChange={(event) => {\n                this.setState({ infinite: event.currentTarget.checked });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}